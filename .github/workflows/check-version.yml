name: Check Version (Date)
on:
  schedule:
    - cron: '0 6 * * 1'
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check version (date)
        id: check_version
        run: |
          # URL of the webpage you want to extract from
          url="https://sigmapatches.su/"
          
          # Use curl to get the webpage content
          content=$(curl -s "$url")
          
          # Use grep to find the line with title="sigpatches" and extract the date
          date_latest=$(echo "$content" | grep -o '.*href="/sigpatches.zip?[0-9]\{2\}\.[0-9]\{2\}\.[0-9]\{4\}' | grep -o '[0-9]\{2\}\.[0-9]\{2\}\.[0-9]\{4\}'| head -n 1)
          echo "Date Latest: $date_latest"
          if [ -n "$date_latest" ]; then
            # Convert to YYYY-MM-DD format
            converted_valid_gnu_date_latest="${date_latest:6:4}-${date_latest:0:2}-${date_latest:3:2}"
  
            # read my version/date as my last release version
            date_my_release=$(curl -s https://api.github.com/repos/abelmarkus/cleansigpatch/releases/latest | jq -r '.tag_name')
            
            echo "Converted Date Latest: $converted_valid_gnu_date_latest"
            echo "Date My Release: $date_my_release"
  
            # Convert dates to seconds since the UNIX epoch
            date_latest_seconds=$(date -d "$converted_valid_gnu_date_latest" +%s)
            date_my_release_seconds=$(date -d "$date_my_release" +%s)
  
            # Compare the integers
            echo "release=false" >> $GITHUB_OUTPUT
            if [ $date_latest_seconds -gt $date_my_release_seconds ]
            then
                echo "Latest is newer then my release, dispatching new release..."
                echo "release=true" >> $GITHUB_OUTPUT
                echo "version=$converted_valid_gnu_date_latest" >> $GITHUB_OUTPUT
            else
                echo "Nothing to do here!"
            fi
          else
            echo "ERROR: Date Latest is empty!"
            exit 1
          fi

      - name: Dispatch a new release creation
        if: ${{ steps.check_version.outputs.release == 'true' }}
        # uses: benc-uk/workflow-dispatch@v1
        # with:
        #  workflow: release-package.yml
        #  inputs: '{
        #      "version": "${{ steps.check_version.outputs.version }}"
        #    }'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run release-package.yml -f version="${{ steps.check_version.outputs.version }}"
